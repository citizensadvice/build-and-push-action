name: 'Build and push to ECR'
description: 'Build and push a Docker image to ERC, written for CA repositories.'
inputs:
  aws_access_key:
    description: 'AWS access key ID'
    required: true
  aws_secret_key:
    description: 'AWS secret access key'
    required: true
  dockerfile_context:
    description: 'The context of the Dockerfile. Defaults to root of project.'
    required: false
    default: '.'
  repository_name:
    description: 'The name of the image repository. Will be used as the name of the Docker image'
    required: true
  auth_token:
    description: 'A token to pull the repository. Usually GITHUB_TOKEN'
    required: true
  multiarch_build:
    description: 'Build a `linux/arm64` image as well as `linux/amd64`. Defaults to `disabled`'
    required: false
    default: 'disabled'

outputs:
  image_id:
    description: 'ID of the image'
    value: ${{ steps.build_and_push.outputs.imageid }}
  image_digest:
    description: 'Digest of the image'
    value: ${{ steps.build_and_push.digest }}
  image_tags:
    description: 'A CSV list of the image tags'
    value: ${{ github.sha }},${{ github.head_ref || github.ref_name }},latest

runs:
  using: 'composite'
  steps:
    - name: Configure Multi-arch Build
      id: multiarch
      shell: bash
      run: |
        if [[ "${{ inputs.multiarch_build }}" == "enabled" ]] ; then
          echo "multiarch=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
        elif [[ "${{ inputs.multiarch_build }}" == "disabled" ]] ; then
          echo "multiarch=linux/amd64" >> $GITHUB_OUTPUT
        else
          echo "Input `multiarch_build` not set correctly. Options are 'enabled' or 'disabled'"
          exit 1
        fi

    - uses: actions/checkout@v3
      with:
        token: ${{ inputs.auth_token }}
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v3.2.0
      with:
        platforms: ${{ steps.multiarch.outputs.multiarch }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_access_key }}
        aws-secret-access-key: ${{ inputs.aws_secret_key }}
        aws-region: us-east-1

    - name: ECR login
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      if: env.IMAGE_EXISTS == 'false'
      id: build_and_push
      with:
        context: .
        push: true
        # Future work: enable cache, see https://github.com/moby/buildkit#github-actions-cache-experimental
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ steps.multiarch.outputs.multiarch }}
        tags: |
          ${{ steps.ecr-login.outputs.registry }}/citizensadvice/${{ inputs.repository_name }}:${{ github.sha }}
          ${{ steps.ecr-login.outputs.registry }}/citizensadvice/${{ inputs.repository_name }}:${{ github.head_ref || github.ref_name }}
          ${{ steps.ecr-login.outputs.registry }}/citizensadvice/${{ inputs.repository_name }}:latest
